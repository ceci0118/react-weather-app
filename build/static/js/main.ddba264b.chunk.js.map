{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Titles","className","React","Component","Form","onSubmit","this","props","getWeather","type","name","placeholder","Weather","city","country","temp","feel_like","description","photo_src","photo_alt","src","alt","error","API_KEY","API_KEY_UNSPLASH","App","state","undefined","temp_min","temp_max","e","preventDefault","target","elements","value","axios","get","then","response","weather_data","data","setState","sys","main","feels_like","weather","photo_data","console","log","random_num","Math","floor","random","results","urls","regular","alt_description","random_photo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAceA,G,6KATP,OACI,sBAAKC,UAAU,QAAf,UACI,gDACA,iE,GALKC,IAAMC,YCWZC,G,6KATP,OACI,uBAAMH,UAAU,OAAOI,SAAUC,KAAKC,MAAMC,WAA5C,UACI,uBAAOP,UAAU,QAAQQ,KAAK,OAAOC,KAAK,OAAOC,YAAY,SAC7D,wBAAQV,UAAU,MAAlB,gC,GALGC,IAAMC,YCyBVS,G,6KAvBP,OACI,sBAAKX,UAAU,UAAf,UAEI,sBAAKA,UAAU,eAAf,UACMK,KAAKC,MAAMM,MAAQP,KAAKC,MAAMO,SAAW,+BAAKR,KAAKC,MAAMM,KAAhB,KAAwBP,KAAKC,MAAMO,WAC5ER,KAAKC,MAAMQ,MAAQ,8CAAiBT,KAAKC,MAAMQ,KAA5B,OACnBT,KAAKC,MAAMS,WAAa,6CAAgBV,KAAKC,MAAMS,UAA3B,OACxBV,KAAKC,MAAMU,aAAe,4CAAeX,KAAKC,MAAMU,kBAG1D,qBAAKhB,UAAU,SAAf,SAEMK,KAAKC,MAAMW,WAAaZ,KAAKC,MAAMY,WAAa,qBAAKC,IAAKd,KAAKC,MAAMW,UAAWG,IAAKf,KAAKC,MAAMY,cAKpGb,KAAKC,MAAMe,OAAS,4BAAIhB,KAAKC,MAAMe,e,GAnB/BpB,IAAMC,Y,gBCItBoB,G,MAAU,oCACVC,EAAmB,8CAuHVC,E,4MAnHbC,MAAQ,CACNb,UAAMc,EACNb,aAASa,EACTZ,UAAMY,EACNX,eAAWW,EACXC,cAAUD,EACVE,cAAUF,EACVV,iBAAaU,EAEbT,eAAWS,EACXR,eAAWQ,EAEXL,WAAOK,G,EAmBTnB,WAAa,SAACsB,GACZA,EAAEC,iBAEF,IAAMlB,EAAOiB,EAAEE,OAAOC,SAASpB,KAAKqB,MAEhCrB,GAEFsB,IAAMC,IAAN,4DAA+DvB,EAA/D,kBAA6EU,EAA7E,kBACCc,MAAK,SAAAC,GACJ,IAAIC,EAAeD,EAASE,KAG5B,EAAKC,SAAS,CACZ5B,KAAM0B,EAAa7B,KACnBI,QAASyB,EAAaG,IAAI5B,QAC1BC,KAAMwB,EAAaI,KAAK5B,KACxBC,UAAWuB,EAAaI,KAAKC,WAC7BhB,SAAUW,EAAaI,KAAKf,SAC5BC,SAAUU,EAAaI,KAAKd,SAC5BZ,YAAasB,EAAaM,QAAQ,GAAG5B,YACrCK,MAAO,QAKXa,IAAMC,IAAN,2DAA8DZ,EAA9D,kBAAwFX,EAAxF,2BACCwB,MAAK,SAAAC,GACJ,IAAIQ,EAAaR,EAASE,KAC1BO,QAAQC,IAAIF,GAGZ,IAAIG,EAAaC,KAAKC,MAAsB,EAAhBD,KAAKE,UAEjC,EAAKX,SAAS,CACZvB,UAAW4B,EAAWO,QAAQJ,GAAYK,KAAKC,QAC/CpC,UAAW2B,EAAWO,QAAQJ,GAAYO,sBAM9C,EAAKf,SAAS,CACZ5B,UAAMc,EACNb,aAASa,EACTZ,UAAMY,EACNX,eAAWW,EACXC,cAAUD,EACVE,cAAUF,EACVV,iBAAaU,EAEbL,MAAO,yC,kEAlEQ,IAAD,OAClBa,IAAMC,IAAN,2DAA8DZ,EAA9D,sCACGa,MAAK,SAAAC,GACJ,IAAImB,EAAenB,EAASE,KAC5BO,QAAQC,IAAIS,GAGZ,IAAIR,EAAaC,KAAKC,MAAsB,EAAhBD,KAAKE,UAEjC,EAAKX,SAAS,CACZvB,UAAWuC,EAAaJ,QAAQJ,GAAYK,KAAKC,QACjDpC,UAAWsC,EAAaJ,QAAQJ,GAAYO,uB,+BAiElD,OACE,qBAAKvD,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMO,WAAYF,KAAKE,aACvB,cAAC,EAAD,CACEK,KAAMP,KAAKoB,MAAMb,KACjBC,QAASR,KAAKoB,MAAMZ,QACpBC,KAAMT,KAAKoB,MAAMX,KACjBC,UAAWV,KAAKoB,MAAMV,UACtBY,SAAUtB,KAAKoB,MAAME,SACrBC,SAAUvB,KAAKoB,MAAMG,SACrBZ,YAAaX,KAAKoB,MAAMT,YACxBC,UAAWZ,KAAKoB,MAAMR,UACtBC,UAAWb,KAAKoB,MAAMP,UACtBG,MAAOhB,KAAKoB,MAAMJ,iB,GA5GZpB,IAAMC,WCETuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ddba264b.chunk.js","sourcesContent":["import React from 'react';\nimport './Title.css'\n\nclass Titles extends React.Component {\n    render (){\n        return(\n            <div className=\"title\">\n                <h1>Weather Finder</h1>\n                <p>Find out weather and more</p>\n            </div>\n        )\n    }\n}\n\nexport default Titles;","import React from 'react';\nimport './Form.css'\n\nclass Form extends React.Component {\n    render (){\n        return(\n            <form className=\"form\" onSubmit={this.props.getWeather}>\n                <input className=\"input\" type=\"text\" name=\"city\" placeholder=\"city\" />\n                <button className=\"btn\">Get Weather</button>\n            </form>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport './Weather.css'\n\nclass Weather extends React.Component {\n    render(){\n        return(\n            <div className=\"weather\">\n\n                <div className=\"weather-info\">\n                    { this.props.city && this.props.country && <h1>{this.props.city}, {this.props.country}</h1>}\n                    { this.props.temp && <p>Temperature: {this.props.temp}C</p> }\n                    { this.props.feel_like && <p>Feels like: {this.props.feel_like}C</p> }\n                    { this.props.description && <p>Condition: {this.props.description}</p> }\n                </div>\n                \n                <div className=\"bg-img\" >\n                    {/* photo */}\n                    { this.props.photo_src && this.props.photo_alt && <img src={this.props.photo_src} alt={this.props.photo_alt}></img> }\n                </div>\n                \n                \n                {/* error */}\n                { this.props.error && <p>{this.props.error}</p> }\n            </div>\n        )\n    }\n}\n\nexport default Weather;","import React from 'react';\nimport Titles from './components/Titles'\nimport Form from './components/Form'\nimport Weather from './components/Weather'\nimport axios from 'axios';\nimport './App.css'\n\nconst API_KEY = \"84f5e73a62f5f300d6d1c99d217554d6\"\nconst API_KEY_UNSPLASH = \"LwRFyTKOBURvKkqR4Nd_57Ks_c_xAR1dkQOUS58f63A\"\n\nclass App extends React.Component {\n\n  state = {\n    city: undefined,\n    country: undefined,\n    temp: undefined,\n    feel_like: undefined,\n    temp_min: undefined,\n    temp_max: undefined,\n    description: undefined,\n\n    photo_src: undefined,\n    photo_alt: undefined,\n\n    error: undefined\n  }\n\n  componentDidMount() {\n    axios.get(`https://api.unsplash.com/search/photos?client_id=${API_KEY_UNSPLASH}&query=city&orientation=landscape`)\n      .then(response => {\n        let random_photo = response.data\n        console.log(random_photo)\n\n        // get a random photo from unsplash\n        let random_num = Math.floor(Math.random() * 9)\n\n        this.setState({\n          photo_src: random_photo.results[random_num].urls.regular,\n          photo_alt: random_photo.results[random_num].alt_description\n        })\n      })\n  }\n  \n  getWeather = (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value\n\n    if (city) {\n      // openweathermap api\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`)\n      .then(response => {\n        let weather_data = response.data\n        // console.log(weather_data)\n\n        this.setState({\n          city: weather_data.name,\n          country: weather_data.sys.country,\n          temp: weather_data.main.temp,\n          feel_like: weather_data.main.feels_like,\n          temp_min: weather_data.main.temp_min,\n          temp_max: weather_data.main.temp_max,\n          description: weather_data.weather[0].description,\n          error: \"\"\n        })\n      })\n\n      // unsplash api\n      axios.get(`https://api.unsplash.com/search/photos?client_id=${API_KEY_UNSPLASH}&query=${city}&orientation=landscape`)\n      .then(response => {\n        let photo_data = response.data\n        console.log(photo_data)\n\n        // get a random photo from unsplash\n        let random_num = Math.floor(Math.random() * 9)\n\n        this.setState({\n          photo_src: photo_data.results[random_num].urls.regular,\n          photo_alt: photo_data.results[random_num].alt_description\n        })\n      })\n\n    } else {\n\n      this.setState({\n        city: undefined,\n        country: undefined,\n        temp: undefined,\n        feel_like: undefined,\n        temp_min: undefined,\n        temp_max: undefined,\n        description: undefined,\n\n        error: \"Please enter a city name to search.\"\n      })\n      \n    }\n  \n  } \n\n\n\n  render() {\n    return(\n      <div className=\"container\">\n        <div className=\"app\">\n          <Titles />\n          <Form getWeather={this.getWeather} />\n          <Weather \n            city={this.state.city}\n            country={this.state.country}\n            temp={this.state.temp}\n            feel_like={this.state.feel_like}\n            temp_min={this.state.temp_min}\n            temp_max={this.state.temp_max}\n            description={this.state.description}\n            photo_src={this.state.photo_src}\n            photo_alt={this.state.photo_alt}\n            error={this.state.error}\n          />\n        </div>\n      </div>\n      \n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}